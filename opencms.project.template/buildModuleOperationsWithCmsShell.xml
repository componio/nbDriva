<?xml version="1.0" encoding="UTF-8"?>
<project name="changeme" default="all" basedir=".">
    <!--
    <property name="modulename" value="new.test.module1"/>
    <property name="modulepath" value="/system/modules"/>
    <property name="scriptDir" value="./scripts"/>
    <property name="packagePath" value="./package"/>
    <property name="cmsSync" value="C:/cmsSync"/>
    <property name="cmsWebInfDir" value="C:/Develop/apache-tomcat-7.0.42-ex2/webapps/opencms/WEB-INF"/>
    <property name="syncOverCMIS" value="false"/>
    <property name="cmsRepoURL" value="http://localhost:8080/opencms/cmisatom/"/>
    <property name="cmsRepoId" value="cms-offline"/>
    -->
    <target name="prepare_createNewModule">
        <replaceregexp file="${scriptDir}/createNewModule.txt"
                       match="login .*"
                       replace="login &quot;${username}&quot; &quot;${password}&quot;"
                       byline="true"/>
        <replaceregexp file="${scriptDir}/createNewModule.txt"
                       match="createNewModule .*"
                       replace="createNewModule &quot;${modulename}&quot; &quot;${module.version}&quot; &quot;${module.action.class}&quot;"
                       byline="true"/>
        <replaceregexp file="${scriptDir}/createNewModule.txt"
                       match="publishResource.*"
                       replace="publishResources &quot;${includedSyncFolders}&quot; true"
                       byline="true"/>
    </target>
    
    <target name="prepare_exportModule">
        <replaceregexp file="${scriptDir}/exportModule.txt"
                       match="login .*"
                       replace="login &quot;${username}&quot; &quot;${password}&quot;"
                       byline="true"/>
        <replaceregexp file="${scriptDir}/exportModule.txt"
                       match="exportModule.*"
                       replace="exportModuleWithVersion &quot;${modulename}&quot; &quot;${module.version}&quot;"
                       byline="true"/>
        <replaceregexp file="${scriptDir}/exportModule.txt"
                       match="publishResource.*"
                       replace="publishResources &quot;${includedSyncFolders}&quot; true"
                       byline="true"/>
    </target>
    
   
    
    <target name="prepare_importModule">
        <replaceregexp file="${scriptDir}/importModule.txt"
                       match="login .*"
                       replace="login &quot;${username}&quot; &quot;${password}&quot;"
                       byline="true"/>
        <replaceregexp file="${scriptDir}/importModule.txt"
                       match="importModule.*"
                       replace="importModules &quot;${importModules}&quot;"
                       byline="true"/>
        <replaceregexp file="${scriptDir}/importModule.txt"
                       match="publishResource.*"
                       replace="publishResources &quot;${includedSyncFolders}&quot; true"
                       byline="true"/>
    </target>
    
    <!-- ############### SYNCHRONIZATION OF OPENCMS MODULE ##################-->
    <target name="check_sync_with_exclusions">
        <condition property="sync.with.exclusions">
            <equals arg1="${useExclusionFile}" arg2="true"/>
        </condition>
    </target>
    
    <target name="prepare_syncFolder_without_exclusion" unless="sync.with.exclusions">
        <replaceregexp file="${scriptDir}/syncFolders.txt"
                       match="login .*"
                       replace="login &quot;${username}&quot; &quot;${password}&quot;"
                       byline="true"/>
        <replaceregexp file="${scriptDir}/syncFolders.txt"
                       match="syncRFSandVFS.*"
                       replace="syncRFSandVFSMultipleFolders &quot;${cmsSync}&quot; &quot;${includedSyncFolders}&quot;"
                       byline="true"/>
        <replaceregexp file="${scriptDir}/syncFolders.txt"
                       match="publishResource.*"
                       replace="publishResources &quot;${includedSyncFolders}&quot; true"
                       byline="true"/>
    </target>
    
    <target name="prepare_syncFolder_with_exclusion" if="sync.with.exclusions" depends="check_sync_with_exclusions">
        <loadresource property="exclusionFileWithSlash">
            <propertyresource name="exclusionFile"/>
            <filterchain>
                <tokenfilter>
                    <filetokenizer/>
                    <replacestring from="\" to="/"/>
                </tokenfilter>
            </filterchain>
        </loadresource>
        <replaceregexp file="${scriptDir}/syncFolders.txt"
                       match="login .*"
                       replace="login &quot;${username}&quot; &quot;${password}&quot;"
                       byline="true"/>
        <replaceregexp file="${scriptDir}/syncFolders.txt"
                       match="syncRFSandVFS.* .*"
                       replace="syncRFSandVFSExclusionFile &quot;${cmsSync}&quot; &quot;${includedSyncFolders}&quot; &quot;${exclusionFileWithSlash}&quot;"
                       byline="true"/>
        <replaceregexp file="${scriptDir}/syncFolders.txt"
                       match="publishResource.*"
                       replace="publishResources &quot;${includedSyncFolders}&quot; true"
                       byline="true"/>
    </target>
    
    <target name="run_createNewModule" depends="prepare_createNewModule">
        <java classname="main.CmsShellMain">
            <arg line="-webInf &quot;${cmsWebInfDir}&quot; -servletmapping &quot;${cmsServletMapping}&quot; -script ${scriptDir}/createNewModule.txt -additional additionalcommands.ModuleCommands"/>
            <classpath path="build">
                <dirset dir="${build.classes.dir}">
                    <include name="**/*.class"/>
                </dirset>
                <pathelement path="${java.class.path}"/>
                <pathelement path="${ivy.resolved.libs.dir}/${classpath-compile.jar}"/>
            </classpath>
        </java>
    </target>
    
    <target name="run_createNewResourceType">
        <java classname="main.CmsShellMain">
            <arg line="-webInf &quot;${cmsWebInfDir}&quot; -servletmapping &quot;${cmsServletMapping}&quot; -script ${scriptDir}/createNewResourceType.txt -additional additionalcommands.ModuleCommands"/>
            <classpath path="build">
                <dirset dir="${build.classes.dir}">
                    <include name="**/*.class"/>
                </dirset>
                <pathelement path="${java.class.path}"/>
                <pathelement path="${ivy.resolved.libs.dir}/${classpath-compile.jar}"/>
            </classpath>
        </java>
    </target>
    
    <target name="run_reverseSyncSingle">
        <java classname="main.CmsShellMain">
            <arg line="-webInf &quot;${cmsWebInfDir}&quot; -servletmapping &quot;${cmsServletMapping}&quot; -script ${scriptDir}/reverseSyncSingle.txt -additional additionalcommands.ModuleCommands"/>
            <classpath path="build">
                <dirset dir="${build.classes.dir}">
                    <include name="**/*.class"/>
                </dirset>
                <pathelement path="${java.class.path}"/>
                <pathelement path="${ivy.resolved.libs.dir}/${classpath-compile.jar}"/>
            </classpath>
        </java>
    </target>
    
    
    <target name="run_exportModule" depends="prepare_exportModule">
        <java classname="main.CmsShellMain">
            <arg line="-webInf &quot;${cmsWebInfDir}&quot; -servletmapping &quot;${cmsServletMapping}&quot; -script ${scriptDir}/exportModule.txt -additional additionalcommands.ModuleCommands"/>
            <classpath path="build">
                <dirset dir="${build.classes.dir}">
                    <include name="**/*.class"/>
                </dirset>
                <pathelement path="${java.class.path}"/>
                <pathelement path="${ivy.resolved.libs.dir}/${classpath-compile.jar}"/>
            </classpath>
        </java>
    </target>
    
    <target name="run_importModule" depends="prepare_importModule">
        <java classname="main.CmsShellMain">
            <arg line="-webInf &quot;${cmsWebInfDir}&quot; -servletmapping &quot;${cmsServletMapping}&quot; -script ${scriptDir}/importModule.txt -additional additionalcommands.ModuleCommands"/>
            <classpath path="build">
                <dirset dir="${build.classes.dir}">
                    <include name="**/*.class"/>
                </dirset>
                <pathelement path="${java.class.path}"/>
                <pathelement path="${ivy.resolved.libs.dir}/${classpath-compile.jar}"/>
            </classpath>
        </java>
    </target>
    
    <target name="run_syncFolder" depends="check_sync_with_exclusions,prepare_syncFolder_without_exclusion,prepare_syncFolder_with_exclusion">
        <java classname="main.CmsShellMain">
            <arg line="-webInf &quot;${cmsWebInfDir}&quot; -servletmapping &quot;${cmsServletMapping}&quot; -script ${scriptDir}/syncFolders.txt -additional additionalcommands.ModuleCommands"/>
            <classpath path="build">
                <dirset dir="${build.classes.dir}">
                    <include name="**/*.class"/>
                </dirset>
                <pathelement path="${java.class.path}"/>
                <pathelement path="${ivy.resolved.libs.dir}/${classpath-compile.jar}"/>
            </classpath>
        </java>
    </target>
    <property name="rfsPathAbsolute" location="${cmsSync}/${modulepath}/${modulename}"/>
    <target name="run_syncFolderOverCMIS">
        <java classname="cmis.CmisSyncModule">
            <arg line="-user ${username} -password ${password} -repoUrl ${cmsRepoURL} -repoId ${cmsRepoId} -rfs ${rfsPathAbsolute} -vfs ${modulepath}/${modulename}"/>
            <classpath path="build">
                <dirset dir="${build.classes.dir}">
                    <include name="**/*.class"/>
                </dirset>
                <pathelement path="${java.class.path}"/>
                <pathelement path="${ivy.resolved.libs.dir}/${classpath-compile.jar}"/>
            </classpath>
        </java>
    </target>
</project>
